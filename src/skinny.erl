-module(skinny).
-export([tcp_start/0, registerMessage/0]).

-define(INTERVAL, 10000).
-define(RESERVED, 0,0,0,0).
-define(REGISTER, 1,0,0,0).
-define(STATION_USER_ID, 0,0,0,0).
-define(STATION_INSTANCE, 1,0,0,0).
-define(IP, 10,9,0,75).
-define(DEVICE_TYPE, 8,0,0,0).
-define(MAX_STREAMS, 0,0,0,0).


keepalive() ->
    receive Sock ->
	    io:format("keepalive ~p ~n", [Sock]),
	    keepalive()
    end.


tcp_start() ->
    Host = "localhost",
    {ok, Sock} = gen_tcp:connect(Host, 2000,
				 [binary, {packet, raw}]),
    ok = gen_tcp:send(Sock, <<16#60,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#20,16#00,16#00,16#00,16#02,16#00,16#00,16#00,16#32,16#30,16#3a,16#20,16#4e,16#61,16#6d,16#65,16#3d,16#53,16#45,16#50,16#30,16#30,16#31,16#36,16#34,16#36,16#38,16#30,16#36,16#35,16#38,16#37,16#20,16#4c,16#6f,16#61,16#64,16#3d,16#38,16#2e,16#31,16#28,16#32,16#2e,16#30,16#29,16#20,16#4c,16#61,16#73,16#74,16#3d,16#50,16#68,16#6f,16#6e,16#65,16#2d,16#4b,16#65,16#79,16#70,16#61,16#64,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#19,16#00,16#00,16#0a,16#09,16#00,16#4b,16#44,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#01,16#00,16#00,16#00,16#53,16#45,16#50,16#30,16#30,16#31,16#36,16#34,16#36,16#38,16#30,16#36,16#35,16#38,16#37,16#00,16#00,16#00,16#00,16#00,16#01,16#00,16#00,16#00,16#0a,16#09,16#00,16#4b,16#08,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#0b,16#00,16#60,16#85,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#00,16#44,16#49,16#53,16#54>>),
%    ok = gen_tcp:close(Sock),
    io:format("data has been sent~n"),
    timer:send_interval(?INTERVAL, spawn(fun keepalive/0), Sock),
    {ok, Sock}.

registerMessage() ->
    {ok, list_to_binary([?RESERVED, ?REGISTER , "SEP001646806587", ?STATION_USER_ID, ?STATION_INSTANCE, ?IP, ?DEVICE_TYPE, ?MAX_STREAMS])}.
    
    
